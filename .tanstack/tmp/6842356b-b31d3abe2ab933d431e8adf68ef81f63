/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ClerkRouteRouteImport } from './routes/clerk/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2RouteImport } from './routes/(auth)/sign-in-2'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as ClerkAuthenticatedRouteRouteImport } from './routes/clerk/_authenticated/route'
import { Route as ClerkauthRouteRouteImport } from './routes/clerk/(auth)/route'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as ApiUserIndexRouteImport } from './routes/api/user/index'
import { Route as AuthenticatedUsersIndexRouteImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedTasksIndexRouteImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedMikrotikIndexRouteImport } from './routes/_authenticated/mikrotik/index'
import { Route as AuthenticatedHotspotIndexRouteImport } from './routes/_authenticated/hotspot/index'
import { Route as AuthenticatedHelpCenterIndexRouteImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedDashboardIndexRouteImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedChatsIndexRouteImport } from './routes/_authenticated/chats/index'
import { Route as AuthenticatedAppsIndexRouteImport } from './routes/_authenticated/apps/index'
import { Route as ClerkAuthenticatedUserManagementRouteImport } from './routes/clerk/_authenticated/user-management'
import { Route as ClerkauthSignUpRouteImport } from './routes/clerk/(auth)/sign-up'
import { Route as ClerkauthSignInRouteImport } from './routes/clerk/(auth)/sign-in'
import { Route as ApiMiddlewareAuthRouteImport } from './routes/api/_middleware/auth'
import { Route as AuthenticatedSettingsNotificationsRouteImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayRouteImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsAppearanceRouteImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountRouteImport } from './routes/_authenticated/settings/account'
import { Route as AuthenticatedHotspotUsersNonActiveRouteImport } from './routes/_authenticated/hotspot/users-non-active'
import { Route as AuthenticatedHotspotUsersActiveRouteImport } from './routes/_authenticated/hotspot/users-active'
import { Route as AuthenticatedHotspotUsersRouteImport } from './routes/_authenticated/hotspot/users'
import { Route as AuthenticatedHotspotUserProfilesRouteImport } from './routes/_authenticated/hotspot/user-profiles'
import { Route as AuthenticatedHotspotServerRouteImport } from './routes/_authenticated/hotspot/server'
import { Route as AuthenticatedHotspotHostsRouteImport } from './routes/_authenticated/hotspot/hosts'
import { Route as AuthenticatedErrorsErrorRouteImport } from './routes/_authenticated/errors/$error'
import { Route as AuthenticatedDashboardProductRouteImport } from './routes/_authenticated/dashboard/product'
import { Route as AuthenticatedDashboardCustomerRouteImport } from './routes/_authenticated/dashboard/customer'
import { ServerRoute as ApiUserServerRouteImport } from './routes/api/user'
import { ServerRoute as ApiRoleIndexServerRouteImport } from './routes/api/role/index'
import { ServerRoute as ApiUserIdServerRouteImport } from './routes/api/user.$id'
import { ServerRoute as ApiRoleRole_idServerRouteImport } from './routes/api/role/$role_id'
import { ServerRoute as ApiMikrotikRouterServerRouteImport } from './routes/api/mikrotik/router'
import { ServerRoute as ApiAuthSignUpServerRouteImport } from './routes/api/auth/sign-up'
import { ServerRoute as ApiAuthSignInServerRouteImport } from './routes/api/auth/sign-in'
import { ServerRoute as ApiAuthRefreshServerRouteImport } from './routes/api/auth/refresh'
import { ServerRoute as ApiAuthMeServerRouteImport } from './routes/api/auth/me'
import { ServerRoute as ApiRoleRole_idPermissionsServerRouteImport } from './routes/api/role/$role_id.permissions'
import { ServerRoute as ApiMikrotikRouterIdServerRouteImport } from './routes/api/mikrotik/router.$id'
import { ServerRoute as ApiMikrotikRouterIdStatusServerRouteImport } from './routes/api/mikrotik/router.$id.status'

const rootServerRouteImport = createServerRootRoute()

const ClerkRouteRoute = ClerkRouteRouteImport.update({
  id: '/clerk',
  path: '/clerk',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignIn2Route = authSignIn2RouteImport.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const ClerkAuthenticatedRouteRoute = ClerkAuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => ClerkRouteRoute,
} as any)
const ClerkauthRouteRoute = ClerkauthRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => ClerkRouteRoute,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const ApiUserIndexRoute = ApiUserIndexRouteImport.update({
  id: '/api/user/',
  path: '/api/user/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedMikrotikIndexRoute =
  AuthenticatedMikrotikIndexRouteImport.update({
    id: '/mikrotik/',
    path: '/mikrotik/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHotspotIndexRoute =
  AuthenticatedHotspotIndexRouteImport.update({
    id: '/hotspot/',
    path: '/hotspot/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexRouteImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedChatsIndexRoute = AuthenticatedChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAppsIndexRoute = AuthenticatedAppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const ClerkAuthenticatedUserManagementRoute =
  ClerkAuthenticatedUserManagementRouteImport.update({
    id: '/user-management',
    path: '/user-management',
    getParentRoute: () => ClerkAuthenticatedRouteRoute,
  } as any)
const ClerkauthSignUpRoute = ClerkauthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => ClerkauthRouteRoute,
} as any)
const ClerkauthSignInRoute = ClerkauthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => ClerkauthRouteRoute,
} as any)
const ApiMiddlewareAuthRoute = ApiMiddlewareAuthRouteImport.update({
  id: '/api/_middleware/auth',
  path: '/api/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedHotspotUsersNonActiveRoute =
  AuthenticatedHotspotUsersNonActiveRouteImport.update({
    id: '/hotspot/users-non-active',
    path: '/hotspot/users-non-active',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHotspotUsersActiveRoute =
  AuthenticatedHotspotUsersActiveRouteImport.update({
    id: '/hotspot/users-active',
    path: '/hotspot/users-active',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHotspotUsersRoute =
  AuthenticatedHotspotUsersRouteImport.update({
    id: '/hotspot/users',
    path: '/hotspot/users',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHotspotUserProfilesRoute =
  AuthenticatedHotspotUserProfilesRouteImport.update({
    id: '/hotspot/user-profiles',
    path: '/hotspot/user-profiles',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHotspotServerRoute =
  AuthenticatedHotspotServerRouteImport.update({
    id: '/hotspot/server',
    path: '/hotspot/server',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHotspotHostsRoute =
  AuthenticatedHotspotHostsRouteImport.update({
    id: '/hotspot/hosts',
    path: '/hotspot/hosts',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedErrorsErrorRoute =
  AuthenticatedErrorsErrorRouteImport.update({
    id: '/errors/$error',
    path: '/errors/$error',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDashboardProductRoute =
  AuthenticatedDashboardProductRouteImport.update({
    id: '/dashboard/product',
    path: '/dashboard/product',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDashboardCustomerRoute =
  AuthenticatedDashboardCustomerRouteImport.update({
    id: '/dashboard/customer',
    path: '/dashboard/customer',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const ApiUserServerRoute = ApiUserServerRouteImport.update({
  id: '/api/user',
  path: '/api/user',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiRoleIndexServerRoute = ApiRoleIndexServerRouteImport.update({
  id: '/api/role/',
  path: '/api/role/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUserIdServerRoute = ApiUserIdServerRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiUserServerRoute,
} as any)
const ApiRoleRole_idServerRoute = ApiRoleRole_idServerRouteImport.update({
  id: '/api/role/$role_id',
  path: '/api/role/$role_id',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiMikrotikRouterServerRoute = ApiMikrotikRouterServerRouteImport.update({
  id: '/api/mikrotik/router',
  path: '/api/mikrotik/router',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSignUpServerRoute = ApiAuthSignUpServerRouteImport.update({
  id: '/api/auth/sign-up',
  path: '/api/auth/sign-up',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSignInServerRoute = ApiAuthSignInServerRouteImport.update({
  id: '/api/auth/sign-in',
  path: '/api/auth/sign-in',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthRefreshServerRoute = ApiAuthRefreshServerRouteImport.update({
  id: '/api/auth/refresh',
  path: '/api/auth/refresh',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthMeServerRoute = ApiAuthMeServerRouteImport.update({
  id: '/api/auth/me',
  path: '/api/auth/me',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiRoleRole_idPermissionsServerRoute =
  ApiRoleRole_idPermissionsServerRouteImport.update({
    id: '/permissions',
    path: '/permissions',
    getParentRoute: () => ApiRoleRole_idServerRoute,
  } as any)
const ApiMikrotikRouterIdServerRoute =
  ApiMikrotikRouterIdServerRouteImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => ApiMikrotikRouterServerRoute,
  } as any)
const ApiMikrotikRouterIdStatusServerRoute =
  ApiMikrotikRouterIdStatusServerRouteImport.update({
    id: '/status',
    path: '/status',
    getParentRoute: () => ApiMikrotikRouterIdServerRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/clerk': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/clerk/': typeof ClerkauthRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/dashboard/customer': typeof AuthenticatedDashboardCustomerRoute
  '/dashboard/product': typeof AuthenticatedDashboardProductRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/hotspot/hosts': typeof AuthenticatedHotspotHostsRoute
  '/hotspot/server': typeof AuthenticatedHotspotServerRoute
  '/hotspot/user-profiles': typeof AuthenticatedHotspotUserProfilesRoute
  '/hotspot/users': typeof AuthenticatedHotspotUsersRoute
  '/hotspot/users-active': typeof AuthenticatedHotspotUsersActiveRoute
  '/hotspot/users-non-active': typeof AuthenticatedHotspotUsersNonActiveRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/api/auth': typeof ApiMiddlewareAuthRoute
  '/clerk/sign-in': typeof ClerkauthSignInRoute
  '/clerk/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/hotspot': typeof AuthenticatedHotspotIndexRoute
  '/mikrotik': typeof AuthenticatedMikrotikIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/api/user': typeof ApiUserIndexRoute
}
export interface FileRoutesByTo {
  '/clerk': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/dashboard/customer': typeof AuthenticatedDashboardCustomerRoute
  '/dashboard/product': typeof AuthenticatedDashboardProductRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/hotspot/hosts': typeof AuthenticatedHotspotHostsRoute
  '/hotspot/server': typeof AuthenticatedHotspotServerRoute
  '/hotspot/user-profiles': typeof AuthenticatedHotspotUserProfilesRoute
  '/hotspot/users': typeof AuthenticatedHotspotUsersRoute
  '/hotspot/users-active': typeof AuthenticatedHotspotUsersActiveRoute
  '/hotspot/users-non-active': typeof AuthenticatedHotspotUsersNonActiveRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/api/auth': typeof ApiMiddlewareAuthRoute
  '/clerk/sign-in': typeof ClerkauthSignInRoute
  '/clerk/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/hotspot': typeof AuthenticatedHotspotIndexRoute
  '/mikrotik': typeof AuthenticatedMikrotikIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/api/user': typeof ApiUserIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/clerk': typeof ClerkRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/clerk/(auth)': typeof ClerkauthRouteRouteWithChildren
  '/clerk/_authenticated': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/dashboard/customer': typeof AuthenticatedDashboardCustomerRoute
  '/_authenticated/dashboard/product': typeof AuthenticatedDashboardProductRoute
  '/_authenticated/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/_authenticated/hotspot/hosts': typeof AuthenticatedHotspotHostsRoute
  '/_authenticated/hotspot/server': typeof AuthenticatedHotspotServerRoute
  '/_authenticated/hotspot/user-profiles': typeof AuthenticatedHotspotUserProfilesRoute
  '/_authenticated/hotspot/users': typeof AuthenticatedHotspotUsersRoute
  '/_authenticated/hotspot/users-active': typeof AuthenticatedHotspotUsersActiveRoute
  '/_authenticated/hotspot/users-non-active': typeof AuthenticatedHotspotUsersNonActiveRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/api/_middleware/auth': typeof ApiMiddlewareAuthRoute
  '/clerk/(auth)/sign-in': typeof ClerkauthSignInRoute
  '/clerk/(auth)/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/_authenticated/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/hotspot/': typeof AuthenticatedHotspotIndexRoute
  '/_authenticated/mikrotik/': typeof AuthenticatedMikrotikIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/api/user/': typeof ApiUserIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/clerk'
    | '/settings'
    | '/clerk/'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/dashboard/customer'
    | '/dashboard/product'
    | '/errors/$error'
    | '/hotspot/hosts'
    | '/hotspot/server'
    | '/hotspot/user-profiles'
    | '/hotspot/users'
    | '/hotspot/users-active'
    | '/hotspot/users-non-active'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/api/auth'
    | '/clerk/sign-in'
    | '/clerk/sign-up'
    | '/clerk/user-management'
    | '/apps'
    | '/chats'
    | '/dashboard'
    | '/help-center'
    | '/hotspot'
    | '/mikrotik'
    | '/settings/'
    | '/tasks'
    | '/users'
    | '/api/user'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/clerk'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/dashboard/customer'
    | '/dashboard/product'
    | '/errors/$error'
    | '/hotspot/hosts'
    | '/hotspot/server'
    | '/hotspot/user-profiles'
    | '/hotspot/users'
    | '/hotspot/users-active'
    | '/hotspot/users-non-active'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/api/auth'
    | '/clerk/sign-in'
    | '/clerk/sign-up'
    | '/clerk/user-management'
    | '/apps'
    | '/chats'
    | '/dashboard'
    | '/help-center'
    | '/hotspot'
    | '/mikrotik'
    | '/settings'
    | '/tasks'
    | '/users'
    | '/api/user'
  id:
    | '__root__'
    | '/_authenticated'
    | '/clerk'
    | '/_authenticated/settings'
    | '/clerk/(auth)'
    | '/clerk/_authenticated'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/dashboard/customer'
    | '/_authenticated/dashboard/product'
    | '/_authenticated/errors/$error'
    | '/_authenticated/hotspot/hosts'
    | '/_authenticated/hotspot/server'
    | '/_authenticated/hotspot/user-profiles'
    | '/_authenticated/hotspot/users'
    | '/_authenticated/hotspot/users-active'
    | '/_authenticated/hotspot/users-non-active'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/api/_middleware/auth'
    | '/clerk/(auth)/sign-in'
    | '/clerk/(auth)/sign-up'
    | '/clerk/_authenticated/user-management'
    | '/_authenticated/apps/'
    | '/_authenticated/chats/'
    | '/_authenticated/dashboard/'
    | '/_authenticated/help-center/'
    | '/_authenticated/hotspot/'
    | '/_authenticated/mikrotik/'
    | '/_authenticated/settings/'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
    | '/api/user/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  ClerkRouteRoute: typeof ClerkRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  ApiMiddlewareAuthRoute: typeof ApiMiddlewareAuthRoute
  ApiUserIndexRoute: typeof ApiUserIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/user': typeof ApiUserServerRouteWithChildren
  '/api/auth/me': typeof ApiAuthMeServerRoute
  '/api/auth/refresh': typeof ApiAuthRefreshServerRoute
  '/api/auth/sign-in': typeof ApiAuthSignInServerRoute
  '/api/auth/sign-up': typeof ApiAuthSignUpServerRoute
  '/api/mikrotik/router': typeof ApiMikrotikRouterServerRouteWithChildren
  '/api/role/$role_id': typeof ApiRoleRole_idServerRouteWithChildren
  '/api/user/$id': typeof ApiUserIdServerRoute
  '/api/role': typeof ApiRoleIndexServerRoute
  '/api/mikrotik/router/$id': typeof ApiMikrotikRouterIdServerRouteWithChildren
  '/api/role/$role_id/permissions': typeof ApiRoleRole_idPermissionsServerRoute
  '/api/mikrotik/router/$id/status': typeof ApiMikrotikRouterIdStatusServerRoute
}
export interface FileServerRoutesByTo {
  '/api/user': typeof ApiUserServerRouteWithChildren
  '/api/auth/me': typeof ApiAuthMeServerRoute
  '/api/auth/refresh': typeof ApiAuthRefreshServerRoute
  '/api/auth/sign-in': typeof ApiAuthSignInServerRoute
  '/api/auth/sign-up': typeof ApiAuthSignUpServerRoute
  '/api/mikrotik/router': typeof ApiMikrotikRouterServerRouteWithChildren
  '/api/role/$role_id': typeof ApiRoleRole_idServerRouteWithChildren
  '/api/user/$id': typeof ApiUserIdServerRoute
  '/api/role': typeof ApiRoleIndexServerRoute
  '/api/mikrotik/router/$id': typeof ApiMikrotikRouterIdServerRouteWithChildren
  '/api/role/$role_id/permissions': typeof ApiRoleRole_idPermissionsServerRoute
  '/api/mikrotik/router/$id/status': typeof ApiMikrotikRouterIdStatusServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/user': typeof ApiUserServerRouteWithChildren
  '/api/auth/me': typeof ApiAuthMeServerRoute
  '/api/auth/refresh': typeof ApiAuthRefreshServerRoute
  '/api/auth/sign-in': typeof ApiAuthSignInServerRoute
  '/api/auth/sign-up': typeof ApiAuthSignUpServerRoute
  '/api/mikrotik/router': typeof ApiMikrotikRouterServerRouteWithChildren
  '/api/role/$role_id': typeof ApiRoleRole_idServerRouteWithChildren
  '/api/user/$id': typeof ApiUserIdServerRoute
  '/api/role/': typeof ApiRoleIndexServerRoute
  '/api/mikrotik/router/$id': typeof ApiMikrotikRouterIdServerRouteWithChildren
  '/api/role/$role_id/permissions': typeof ApiRoleRole_idPermissionsServerRoute
  '/api/mikrotik/router/$id/status': typeof ApiMikrotikRouterIdStatusServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/user'
    | '/api/auth/me'
    | '/api/auth/refresh'
    | '/api/auth/sign-in'
    | '/api/auth/sign-up'
    | '/api/mikrotik/router'
    | '/api/role/$role_id'
    | '/api/user/$id'
    | '/api/role'
    | '/api/mikrotik/router/$id'
    | '/api/role/$role_id/permissions'
    | '/api/mikrotik/router/$id/status'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/user'
    | '/api/auth/me'
    | '/api/auth/refresh'
    | '/api/auth/sign-in'
    | '/api/auth/sign-up'
    | '/api/mikrotik/router'
    | '/api/role/$role_id'
    | '/api/user/$id'
    | '/api/role'
    | '/api/mikrotik/router/$id'
    | '/api/role/$role_id/permissions'
    | '/api/mikrotik/router/$id/status'
  id:
    | '__root__'
    | '/api/user'
    | '/api/auth/me'
    | '/api/auth/refresh'
    | '/api/auth/sign-in'
    | '/api/auth/sign-up'
    | '/api/mikrotik/router'
    | '/api/role/$role_id'
    | '/api/user/$id'
    | '/api/role/'
    | '/api/mikrotik/router/$id'
    | '/api/role/$role_id/permissions'
    | '/api/mikrotik/router/$id/status'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiUserServerRoute: typeof ApiUserServerRouteWithChildren
  ApiAuthMeServerRoute: typeof ApiAuthMeServerRoute
  ApiAuthRefreshServerRoute: typeof ApiAuthRefreshServerRoute
  ApiAuthSignInServerRoute: typeof ApiAuthSignInServerRoute
  ApiAuthSignUpServerRoute: typeof ApiAuthSignUpServerRoute
  ApiMikrotikRouterServerRoute: typeof ApiMikrotikRouterServerRouteWithChildren
  ApiRoleRole_idServerRoute: typeof ApiRoleRole_idServerRouteWithChildren
  ApiRoleIndexServerRoute: typeof ApiRoleIndexServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/clerk': {
      id: '/clerk'
      path: '/clerk'
      fullPath: '/clerk'
      preLoaderRoute: typeof ClerkRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clerk/_authenticated': {
      id: '/clerk/_authenticated'
      path: ''
      fullPath: '/clerk'
      preLoaderRoute: typeof ClerkAuthenticatedRouteRouteImport
      parentRoute: typeof ClerkRouteRoute
    }
    '/clerk/(auth)': {
      id: '/clerk/(auth)'
      path: '/'
      fullPath: '/clerk/'
      preLoaderRoute: typeof ClerkauthRouteRouteImport
      parentRoute: typeof ClerkRouteRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/api/user/': {
      id: '/api/user/'
      path: '/api/user'
      fullPath: '/api/user'
      preLoaderRoute: typeof ApiUserIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/mikrotik/': {
      id: '/_authenticated/mikrotik/'
      path: '/mikrotik'
      fullPath: '/mikrotik'
      preLoaderRoute: typeof AuthenticatedMikrotikIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/hotspot/': {
      id: '/_authenticated/hotspot/'
      path: '/hotspot'
      fullPath: '/hotspot'
      preLoaderRoute: typeof AuthenticatedHotspotIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/clerk/_authenticated/user-management': {
      id: '/clerk/_authenticated/user-management'
      path: '/user-management'
      fullPath: '/clerk/user-management'
      preLoaderRoute: typeof ClerkAuthenticatedUserManagementRouteImport
      parentRoute: typeof ClerkAuthenticatedRouteRoute
    }
    '/clerk/(auth)/sign-up': {
      id: '/clerk/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/clerk/sign-up'
      preLoaderRoute: typeof ClerkauthSignUpRouteImport
      parentRoute: typeof ClerkauthRouteRoute
    }
    '/clerk/(auth)/sign-in': {
      id: '/clerk/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/clerk/sign-in'
      preLoaderRoute: typeof ClerkauthSignInRouteImport
      parentRoute: typeof ClerkauthRouteRoute
    }
    '/api/_middleware/auth': {
      id: '/api/_middleware/auth'
      path: '/api/auth'
      fullPath: '/api/auth'
      preLoaderRoute: typeof ApiMiddlewareAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/hotspot/users-non-active': {
      id: '/_authenticated/hotspot/users-non-active'
      path: '/hotspot/users-non-active'
      fullPath: '/hotspot/users-non-active'
      preLoaderRoute: typeof AuthenticatedHotspotUsersNonActiveRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/hotspot/users-active': {
      id: '/_authenticated/hotspot/users-active'
      path: '/hotspot/users-active'
      fullPath: '/hotspot/users-active'
      preLoaderRoute: typeof AuthenticatedHotspotUsersActiveRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/hotspot/users': {
      id: '/_authenticated/hotspot/users'
      path: '/hotspot/users'
      fullPath: '/hotspot/users'
      preLoaderRoute: typeof AuthenticatedHotspotUsersRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/hotspot/user-profiles': {
      id: '/_authenticated/hotspot/user-profiles'
      path: '/hotspot/user-profiles'
      fullPath: '/hotspot/user-profiles'
      preLoaderRoute: typeof AuthenticatedHotspotUserProfilesRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/hotspot/server': {
      id: '/_authenticated/hotspot/server'
      path: '/hotspot/server'
      fullPath: '/hotspot/server'
      preLoaderRoute: typeof AuthenticatedHotspotServerRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/hotspot/hosts': {
      id: '/_authenticated/hotspot/hosts'
      path: '/hotspot/hosts'
      fullPath: '/hotspot/hosts'
      preLoaderRoute: typeof AuthenticatedHotspotHostsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/errors/$error': {
      id: '/_authenticated/errors/$error'
      path: '/errors/$error'
      fullPath: '/errors/$error'
      preLoaderRoute: typeof AuthenticatedErrorsErrorRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard/product': {
      id: '/_authenticated/dashboard/product'
      path: '/dashboard/product'
      fullPath: '/dashboard/product'
      preLoaderRoute: typeof AuthenticatedDashboardProductRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard/customer': {
      id: '/_authenticated/dashboard/customer'
      path: '/dashboard/customer'
      fullPath: '/dashboard/customer'
      preLoaderRoute: typeof AuthenticatedDashboardCustomerRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/user': {
      id: '/api/user'
      path: '/api/user'
      fullPath: '/api/user'
      preLoaderRoute: typeof ApiUserServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/role/': {
      id: '/api/role/'
      path: '/api/role'
      fullPath: '/api/role'
      preLoaderRoute: typeof ApiRoleIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/user/$id': {
      id: '/api/user/$id'
      path: '/$id'
      fullPath: '/api/user/$id'
      preLoaderRoute: typeof ApiUserIdServerRouteImport
      parentRoute: typeof ApiUserServerRoute
    }
    '/api/role/$role_id': {
      id: '/api/role/$role_id'
      path: '/api/role/$role_id'
      fullPath: '/api/role/$role_id'
      preLoaderRoute: typeof ApiRoleRole_idServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/mikrotik/router': {
      id: '/api/mikrotik/router'
      path: '/api/mikrotik/router'
      fullPath: '/api/mikrotik/router'
      preLoaderRoute: typeof ApiMikrotikRouterServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/sign-up': {
      id: '/api/auth/sign-up'
      path: '/api/auth/sign-up'
      fullPath: '/api/auth/sign-up'
      preLoaderRoute: typeof ApiAuthSignUpServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/sign-in': {
      id: '/api/auth/sign-in'
      path: '/api/auth/sign-in'
      fullPath: '/api/auth/sign-in'
      preLoaderRoute: typeof ApiAuthSignInServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/refresh': {
      id: '/api/auth/refresh'
      path: '/api/auth/refresh'
      fullPath: '/api/auth/refresh'
      preLoaderRoute: typeof ApiAuthRefreshServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/me': {
      id: '/api/auth/me'
      path: '/api/auth/me'
      fullPath: '/api/auth/me'
      preLoaderRoute: typeof ApiAuthMeServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/role/$role_id/permissions': {
      id: '/api/role/$role_id/permissions'
      path: '/permissions'
      fullPath: '/api/role/$role_id/permissions'
      preLoaderRoute: typeof ApiRoleRole_idPermissionsServerRouteImport
      parentRoute: typeof ApiRoleRole_idServerRoute
    }
    '/api/mikrotik/router/$id': {
      id: '/api/mikrotik/router/$id'
      path: '/$id'
      fullPath: '/api/mikrotik/router/$id'
      preLoaderRoute: typeof ApiMikrotikRouterIdServerRouteImport
      parentRoute: typeof ApiMikrotikRouterServerRoute
    }
    '/api/mikrotik/router/$id/status': {
      id: '/api/mikrotik/router/$id/status'
      path: '/status'
      fullPath: '/api/mikrotik/router/$id/status'
      preLoaderRoute: typeof ApiMikrotikRouterIdStatusServerRouteImport
      parentRoute: typeof ApiMikrotikRouterIdServerRoute
    }
  }
}

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedDashboardCustomerRoute: typeof AuthenticatedDashboardCustomerRoute
  AuthenticatedDashboardProductRoute: typeof AuthenticatedDashboardProductRoute
  AuthenticatedErrorsErrorRoute: typeof AuthenticatedErrorsErrorRoute
  AuthenticatedHotspotHostsRoute: typeof AuthenticatedHotspotHostsRoute
  AuthenticatedHotspotServerRoute: typeof AuthenticatedHotspotServerRoute
  AuthenticatedHotspotUserProfilesRoute: typeof AuthenticatedHotspotUserProfilesRoute
  AuthenticatedHotspotUsersRoute: typeof AuthenticatedHotspotUsersRoute
  AuthenticatedHotspotUsersActiveRoute: typeof AuthenticatedHotspotUsersActiveRoute
  AuthenticatedHotspotUsersNonActiveRoute: typeof AuthenticatedHotspotUsersNonActiveRoute
  AuthenticatedAppsIndexRoute: typeof AuthenticatedAppsIndexRoute
  AuthenticatedChatsIndexRoute: typeof AuthenticatedChatsIndexRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedHotspotIndexRoute: typeof AuthenticatedHotspotIndexRoute
  AuthenticatedMikrotikIndexRoute: typeof AuthenticatedMikrotikIndexRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedDashboardCustomerRoute: AuthenticatedDashboardCustomerRoute,
  AuthenticatedDashboardProductRoute: AuthenticatedDashboardProductRoute,
  AuthenticatedErrorsErrorRoute: AuthenticatedErrorsErrorRoute,
  AuthenticatedHotspotHostsRoute: AuthenticatedHotspotHostsRoute,
  AuthenticatedHotspotServerRoute: AuthenticatedHotspotServerRoute,
  AuthenticatedHotspotUserProfilesRoute: AuthenticatedHotspotUserProfilesRoute,
  AuthenticatedHotspotUsersRoute: AuthenticatedHotspotUsersRoute,
  AuthenticatedHotspotUsersActiveRoute: AuthenticatedHotspotUsersActiveRoute,
  AuthenticatedHotspotUsersNonActiveRoute:
    AuthenticatedHotspotUsersNonActiveRoute,
  AuthenticatedAppsIndexRoute: AuthenticatedAppsIndexRoute,
  AuthenticatedChatsIndexRoute: AuthenticatedChatsIndexRoute,
  AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedHotspotIndexRoute: AuthenticatedHotspotIndexRoute,
  AuthenticatedMikrotikIndexRoute: AuthenticatedMikrotikIndexRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface ClerkauthRouteRouteChildren {
  ClerkauthSignInRoute: typeof ClerkauthSignInRoute
  ClerkauthSignUpRoute: typeof ClerkauthSignUpRoute
}

const ClerkauthRouteRouteChildren: ClerkauthRouteRouteChildren = {
  ClerkauthSignInRoute: ClerkauthSignInRoute,
  ClerkauthSignUpRoute: ClerkauthSignUpRoute,
}

const ClerkauthRouteRouteWithChildren = ClerkauthRouteRoute._addFileChildren(
  ClerkauthRouteRouteChildren,
)

interface ClerkAuthenticatedRouteRouteChildren {
  ClerkAuthenticatedUserManagementRoute: typeof ClerkAuthenticatedUserManagementRoute
}

const ClerkAuthenticatedRouteRouteChildren: ClerkAuthenticatedRouteRouteChildren =
  {
    ClerkAuthenticatedUserManagementRoute:
      ClerkAuthenticatedUserManagementRoute,
  }

const ClerkAuthenticatedRouteRouteWithChildren =
  ClerkAuthenticatedRouteRoute._addFileChildren(
    ClerkAuthenticatedRouteRouteChildren,
  )

interface ClerkRouteRouteChildren {
  ClerkauthRouteRoute: typeof ClerkauthRouteRouteWithChildren
  ClerkAuthenticatedRouteRoute: typeof ClerkAuthenticatedRouteRouteWithChildren
}

const ClerkRouteRouteChildren: ClerkRouteRouteChildren = {
  ClerkauthRouteRoute: ClerkauthRouteRouteWithChildren,
  ClerkAuthenticatedRouteRoute: ClerkAuthenticatedRouteRouteWithChildren,
}

const ClerkRouteRouteWithChildren = ClerkRouteRoute._addFileChildren(
  ClerkRouteRouteChildren,
)

interface ApiUserServerRouteChildren {
  ApiUserIdServerRoute: typeof ApiUserIdServerRoute
}

const ApiUserServerRouteChildren: ApiUserServerRouteChildren = {
  ApiUserIdServerRoute: ApiUserIdServerRoute,
}

const ApiUserServerRouteWithChildren = ApiUserServerRoute._addFileChildren(
  ApiUserServerRouteChildren,
)

interface ApiMikrotikRouterIdServerRouteChildren {
  ApiMikrotikRouterIdStatusServerRoute: typeof ApiMikrotikRouterIdStatusServerRoute
}

const ApiMikrotikRouterIdServerRouteChildren: ApiMikrotikRouterIdServerRouteChildren =
  {
    ApiMikrotikRouterIdStatusServerRoute: ApiMikrotikRouterIdStatusServerRoute,
  }

const ApiMikrotikRouterIdServerRouteWithChildren =
  ApiMikrotikRouterIdServerRoute._addFileChildren(
    ApiMikrotikRouterIdServerRouteChildren,
  )

interface ApiMikrotikRouterServerRouteChildren {
  ApiMikrotikRouterIdServerRoute: typeof ApiMikrotikRouterIdServerRouteWithChildren
}

const ApiMikrotikRouterServerRouteChildren: ApiMikrotikRouterServerRouteChildren =
  {
    ApiMikrotikRouterIdServerRoute: ApiMikrotikRouterIdServerRouteWithChildren,
  }

const ApiMikrotikRouterServerRouteWithChildren =
  ApiMikrotikRouterServerRoute._addFileChildren(
    ApiMikrotikRouterServerRouteChildren,
  )

interface ApiRoleRole_idServerRouteChildren {
  ApiRoleRole_idPermissionsServerRoute: typeof ApiRoleRole_idPermissionsServerRoute
}

const ApiRoleRole_idServerRouteChildren: ApiRoleRole_idServerRouteChildren = {
  ApiRoleRole_idPermissionsServerRoute: ApiRoleRole_idPermissionsServerRoute,
}

const ApiRoleRole_idServerRouteWithChildren =
  ApiRoleRole_idServerRoute._addFileChildren(ApiRoleRole_idServerRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  ClerkRouteRoute: ClerkRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  ApiMiddlewareAuthRoute: ApiMiddlewareAuthRoute,
  ApiUserIndexRoute: ApiUserIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiUserServerRoute: ApiUserServerRouteWithChildren,
  ApiAuthMeServerRoute: ApiAuthMeServerRoute,
  ApiAuthRefreshServerRoute: ApiAuthRefreshServerRoute,
  ApiAuthSignInServerRoute: ApiAuthSignInServerRoute,
  ApiAuthSignUpServerRoute: ApiAuthSignUpServerRoute,
  ApiMikrotikRouterServerRoute: ApiMikrotikRouterServerRouteWithChildren,
  ApiRoleRole_idServerRoute: ApiRoleRole_idServerRouteWithChildren,
  ApiRoleIndexServerRoute: ApiRoleIndexServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
